<?xml version="1.0" encoding="UTF-8" ?>

<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
<channel>
   
      <title>http://harishv.me/</title>
   
   <link>http://harishv.me</link>
   <description>My thoughts - on life & code.</description>
   <language>en-uk</language>
   <managingEditor> Harish V</managingEditor>
   <atom:link href="rss" rel="self" type="application/rss+xml" />
   
	<item>
	  <title>Adding SSL to Your Site (Free!)</title>
	  <link>/blog//Adding-SSL-to-Your-Site-for-Free</link>
	  <author>Harish V</author>
	  <pubDate>2017-04-24T00:00:00+08:00</pubDate>
	  <guid>/blog//Adding-SSL-to-Your-Site-for-Free</guid>
	  <description><![CDATA[
	     <p>I have been using <a href="https://pages.github.com/">GitHub Pages</a> to host my static websites for several years now. But recently, this error notice worried me.</p>

<p><img src="assets/images/posts/SSL_error.png" alt="SSL Error Message" /></p>

<p>This happens when you visit my website, harishv.me, with a <code class="highlighter-rouge">www</code> in front. This redirects to <a href="https://harishv.me">https://harishv.me</a> and all you will see is this <code class="highlighter-rouge">ERR_SSL_PROTOCOL_ERROR</code> as the site is unable to provide a secure connection.</p>

<p>If you are using a normal GitHub Pages site, which means it has a domain that has <code class="highlighter-rouge">.github.io</code>, you can simply go to the GitHub repository you are using, click settings, go all the way down till you see <code class="highlighter-rouge">Enforce HTTPS</code>. Clicking this will mean that your site will always be served over HTTPS.</p>

<p>When researching for free SSL options to add onto my website, I found that you can actually use <a href="https://www.cloudflare.com/">Cloudflare’s</a> name servers under their free plan to obtain a SSL certificate for your website.</p>

<p>Simply,</p>

<ol>
  <li>Create a <a href="https://www.cloudflare.com/">Cloudflare</a> account</li>
  <li>Allow Cloudflare to scan your website records</li>
  <li>Check and verify that the automatically generated records by Cloudflare matches with those on your registrar’s page (in my case, this is <a href="http://namecheap.com/">Namecheap.com</a>)</li>
  <li>Cloudflare will now give you 2 nameservers to add into your account</li>
  <li>Login to Namecheap</li>
  <li>Click on Domains List</li>
  <li>Select the domain you want to add SSL for and click on <code class="highlighter-rouge">Manage</code> at the right side</li>
  <li>Under nameservers, copy and paste the 2 nameservers Cloudflare gave you</li>
  <li>Once done, on Cloudflare’s Overview tab, click on <code class="highlighter-rouge">Recheck Nameservers</code></li>
</ol>

<p>Cloudflare also offers up to three page rules in the free plan. With this, we can always enforce a `https on our website. To do that,</p>

<ol>
  <li>Click on the Page Rule tab at the top in Cloudflare</li>
  <li>Enter this: <code class="highlighter-rouge">http://*&lt;your-domain-name&gt;.com/*</code></li>
  <li>Add the settings to be <code class="highlighter-rouge">Always Use HTTPS</code></li>
  <li>Click on <code class="highlighter-rouge">Save and Deploy</code></li>
</ol>

<p>The asterisks are like wildcard patterns which means any URLs entered in that format will be enforced to utilise HTTPS connection. For example, <a href="www.harishv.me">www.harishv.me</a> or <a href="http://harishv.me/blog">http://harishv.me/blog</a> will all now be enforced with HTTPS.</p>

<p>That’s all folks. Get your free SSL certificate with Cloudflare now!</p>

<p>P.S. If you’re wondering why is HTTPS that big of a deal, wait a few days for my next article on HTTPS - What’s the Big Deal?.</p>

	  ]]></description>
	</item>

	<item>
	  <title>Hosting with GitHub Pages</title>
	  <link>/blog//Hosting-with-GitHub-Pages</link>
	  <author>Harish V</author>
	  <pubDate>2017-04-14T00:00:00+08:00</pubDate>
	  <guid>/blog//Hosting-with-GitHub-Pages</guid>
	  <description><![CDATA[
	     <p>Did you know you can host websites with GitHub Pages? In fact, so far, all my websites have been hosted with GitHub Pages. See my <a href="http://harishv7.github.io/projects">Projects</a>. All the websites there under the domain <a href="http://harishv.me">harishv.me</a> are hosted under GitHub Pages. And of course, my homepage, and even this blog you are reading now are hosted on GitHub Pages. Let’s see why is it so awesome.</p>

<h3 id="the-great-stuff">The Great Stuff</h3>

<h4 id="its-free">1. It’s free!</h4>
<p>GitHub Pages offers free hosting of your websites/apps etc. That’s right, its totally free. (There’s a catch though, check the limitations below).</p>

<h4 id="connected-to-your-git-repository">2. Connected to your Git repository</h4>
<p>Version control is crucial for any project you do. GitHub Pages is connected with your GitHub repository, which means once any changes are pushed, your website is automatically rebuilt and deployed for you. The individual sub-pages that see - <a href="http://harishv.me/blog/">my blog</a>, <a href="http://harishv.me/projects/">my projects</a>, <a href="http://harishv.me/photography/">my photography page</a> are all individual GitHub repositories. The main page is a GitHub repository named <code class="highlighter-rouge">&lt;your-github-username&gt;.github.io</code> on the <code class="highlighter-rouge">master</code> branch. To deploy other repositories under your GitHub Pages domain, you simply push your changes to a <code class="highlighter-rouge">gh-pages</code> branch.</p>

<h4 id="custom-domain-names">3. Custom domain names</h4>
<p>By default GitHub Pages offers the domain <code class="highlighter-rouge">http://&lt;your-github-username&gt;.github.io</code>. This is good enough for many hobbyists to try deploying their local projects on the web. But if you want a custom domain, you can do that too. Simply register for a domain name on sites like <a href="http://namecheap.com/">Namecheap</a> or <a href="http://godaddy.com/">GoDaddy</a> and connect them to GitHub pages. My site domain <a href="http://harishv.me">harishv.me</a> is registered on Namecheap and connected to my GitHub repositories. If you want to see how I connected my Namecheap domain with GitHub Pages, check <a href="/blog//Connecting-Namecheap-Domain-with-GitHub">this</a> out.</p>

<h4 id="jekyll-blogging-support">4. Jekyll blogging support</h4>
<p>GitHub Pages supports Jekyll, which means you can create blogs and deploy them. Jekyll is a powerful <a href="https://en.wikipedia.org/wiki/Markdown">Markdown</a>-based blogging tool. All you need to do is run a few Jekyll commands after writing your posts and Jekyll builds static sites which you can easily push to GitHub. My <a href="http://harishv.me/blog/">blog</a> is built with Jekyll as well. It’s a great way for people who prefer pure code-style of blogging. Also, all your posts can be easily backed up as they are all in a text-based Markdown format.</p>

<h4 id="great-uptime">5. Great Uptime</h4>
<p>GitHub is almost always up with some rare cases of downtime. This means that it provides reliable service in ensuring your webpages are live 99% of the time. That’s one huge bonus for a free service. You can check on the GitHub system status <a href="https://status.github.com/">here</a>.</p>

<h3 id="limitations">Limitations</h3>

<p>This is a rather short section since there aren’t many disadvantages I can think of. There are rather limitations with GitHub Pages.</p>

<h4 id="only-hosts-static-sites">1. Only Hosts Static Sites</h4>
<p>While its true that GitHub Pages offers free hosting, it does not support full-fledged dynamic sites. Rather you can only host static sites which means they are in pure HTML, CSS and JavaScript. Essentially, there is no server-side support where you can for example do database-related operations etc. Nevertheless, this alone is powerful enough for some projects. All my pure front-end based projects are hosted with GitHub Pages. I have made many of those with the combination of HTML, CSS, JavaScript, libraries such as ReactJS and jQuery, and frameworks such as Bootstrap or Foundation.</p>

<h4 id="only-supports-github-repositories">2. Only supports GitHub repositories</h4>
<p>Of course, GitHub only supports repositories from itself. If you use another platform like <a href="https://bitbucket.org/">Atlassian BitBucket</a> for version control then you will not be able to utilise GitHub Pages. If you are using BitBucket, you are in luck since they too offer support for hosting static sites.  Check this <a href="https://confluence.atlassian.com/bitbucket/publishing-a-website-on-bitbucket-cloud-221449776.html">FAQ section</a> for more information.</p>

	  ]]></description>
	</item>

	<item>
	  <title>Connecting Namecheap Domain with GitHub Pages</title>
	  <link>/blog//Connecting-Namecheap-Domain-with-GitHub</link>
	  <author>Harish V</author>
	  <pubDate>2017-04-12T00:00:00+08:00</pubDate>
	  <guid>/blog//Connecting-Namecheap-Domain-with-GitHub</guid>
	  <description><![CDATA[
	     <p>A basic tutorial for those who are looking to connect their custom domain to GitHub Pages. This post assumes you will be getting your domain with Namecheap. But, it should mostly apply to any domain providers.</p>

<p>I first used Namecheap because they offered students free domains. Yup, if you are a student you can get a free Namecheap domain ending with `.me’ free for a year. Check their offer <a href="https://nc.me/">here</a>.</p>

<h4 id="register-on-namecheap">1. Register on Namecheap</h4>
<p>Simply go to the <a href="https://www.namecheap.com/">Namecheap homepage</a> and register for an account.</p>

<h4 id="select-a-cool-domain">2. Select a cool domain</h4>
<p>Try to get a <code class="highlighter-rouge">.com</code> domain. It is the most general and commonly used domain. But with a ton of websites floating online, you may not be able to find your ideal domain available under <code class="highlighter-rouge">.com</code>. If thats the case check out <code class="highlighter-rouge">.me</code> domains for a personal website (like mine), the trendy <code class="highlighter-rouge">.io</code> for a startup/business, <code class="highlighter-rouge">.net</code>. Namecheap offers a wide range of domains to choose from. Some of them are <code class="highlighter-rouge">.life</code>, <code class="highlighter-rouge">.co</code>, <code class="highlighter-rouge">.tech</code> etc.</p>

<p>Choose the domain carefully as you will be sticking with it for some considerable time.</p>

<h4 id="get-a-github-repository">3. Get a GitHub Repository</h4>
<p>If you have not yet created a repository, go to GitHub to create one. Name it <code class="highlighter-rouge">&lt;your-github-username&gt;.github.io</code> and ensure you have a master branch where you can push your HTML files. I assume you have your HTML, CSS, JavaScript files ready. Push them to this repository on the master branch.</p>

<p>Visit the website <code class="highlighter-rouge">&lt;your-github-username&gt;.github.io</code> should allow you to view the expected website.</p>

<h4 id="create-a-cname-record-in-your-repository">4. Create a CNAME record in your Repository</h4>
<p>Create a file titled CNAME with your domain name. That’s it. For example my CNAME file contains this:
<code class="highlighter-rouge">harishv.me</code>.</p>

<h4 id="go-to-namecheaps-dashboard">5. Go to Namecheap’s Dashboard</h4>
<p>Under the Advanced DNS section, add in the following records. The CNAME record’s value  follows the GitHub URL you made in step 3. The A records are used to point the domain name to the IP address of the hosting server, which in your case will be GitHub’s.</p>

<p><img src="assets/images/posts/namecheap_records.png" alt="Namecheap Records" /></p>

<p>That’s all folks. Give it a few minutes (or hours) and your site will be live at your newly registered domain.</p>

	  ]]></description>
	</item>


</channel>
</rss>
