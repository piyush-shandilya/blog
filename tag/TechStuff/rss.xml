<?xml version="1.0" encoding="UTF-8" ?>

<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
<channel>
   
      <title>http://harishv.me/</title>
   
   <link>http://harishv.me</link>
   <description>My thoughts - on life, code and everthing in between.</description>
   <language>en-uk</language>
   <managingEditor> Harish V</managingEditor>
   <atom:link href="rss" rel="self" type="application/rss+xml" />
   
	<item>
	  <title>Getting a Free Domain For Students</title>
	  <link>/blog//Getting-a-Free-Domain-For-Students</link>
	  <author>Harish V</author>
	  <pubDate>2017-04-29T00:00:00+08:00</pubDate>
	  <guid>/blog//Getting-a-Free-Domain-For-Students</guid>
	  <description><![CDATA[
	     <p>If you are student and you are looking to get a domain, then you’re in luck! You can get one for free with Namecheap. Namecheap provides services such as domain name registration and web hosting services.</p>

<p>If you want a free domain, check out their student offer <a href="https://nc.me/">here</a>.</p>

<p><img src="http://imgur.com/AM8g6yo.png" alt="Namecheap Student Deal" /></p>

<p>There is a small catch though. You will only be able to get the <code class="highlighter-rouge">.me</code> domain for free. <code class="highlighter-rouge">.me</code> domains are usually used for personal sites and blogs like mine. If you’re looking for <code class="highlighter-rouge">.com</code>, <code class="highlighter-rouge">.net</code>, <code class="highlighter-rouge">.io</code> and other domains, then this offer will not apply. Despite that, Namecheap’s domain hosting is extremely affordable and comes in at only a couple of dollars per <em>year</em>.</p>

	  ]]></description>
	</item>

	<item>
	  <title>Adding SSL to Your Site (Free!)</title>
	  <link>/blog//Adding-SSL-to-Your-Site-for-Free</link>
	  <author>Harish V</author>
	  <pubDate>2017-04-24T00:00:00+08:00</pubDate>
	  <guid>/blog//Adding-SSL-to-Your-Site-for-Free</guid>
	  <description><![CDATA[
	     <p>I have been using <a href="https://pages.github.com/">GitHub Pages</a> to host my static websites for several years now. But recently, this error notice worried me.</p>

<p><img src="assets/images/posts/SSL_error.png" alt="SSL Error Message" /></p>

<p>This happens when you visit my website, harishv.me, with a <code class="highlighter-rouge">www</code> in front. This redirects to <a href="https://harishv.me">https://harishv.me</a> and all you will see is this <code class="highlighter-rouge">ERR_SSL_PROTOCOL_ERROR</code> as the site is unable to provide a secure connection.</p>

<p>If you are using a normal GitHub Pages site, which means it has a domain that has <code class="highlighter-rouge">.github.io</code>, you can simply go to the GitHub repository you are using, click settings, go all the way down till you see <code class="highlighter-rouge">Enforce HTTPS</code>. Clicking this will mean that your site will always be served over HTTPS.</p>

<p>When researching for free SSL options to add onto my website, I found that you can actually use <a href="https://www.cloudflare.com/">Cloudflare’s</a> name servers under their free plan to obtain a SSL certificate for your website.</p>

<p>Simply,</p>

<ol>
  <li>Create a <a href="https://www.cloudflare.com/">Cloudflare</a> account</li>
  <li>Allow Cloudflare to scan your website records</li>
  <li>Check and verify that the automatically generated records by Cloudflare matches with those on your registrar’s page (in my case, this is <a href="http://namecheap.com/">Namecheap.com</a>)</li>
  <li>Cloudflare will now give you 2 nameservers to add into your account</li>
  <li>Login to Namecheap</li>
  <li>Click on Domains List</li>
  <li>Select the domain you want to add SSL for and click on <code class="highlighter-rouge">Manage</code> at the right side</li>
  <li>Under nameservers, copy and paste the 2 nameservers Cloudflare gave you</li>
  <li>Once done, on Cloudflare’s Overview tab, click on <code class="highlighter-rouge">Recheck Nameservers</code></li>
</ol>

<p>Cloudflare also offers up to three page rules in the free plan. With this, we can always enforce a `https on our website. To do that,</p>

<ol>
  <li>Click on the Page Rule tab at the top in Cloudflare</li>
  <li>Enter this: <code class="highlighter-rouge">http://*&lt;your-domain-name&gt;.com/*</code></li>
  <li>Add the settings to be <code class="highlighter-rouge">Always Use HTTPS</code></li>
  <li>Click on <code class="highlighter-rouge">Save and Deploy</code></li>
</ol>

<p>The asterisks are like wildcard patterns which means any URLs entered in that format will be enforced to utilise HTTPS connection. For example, <a href="www.harishv.me">www.harishv.me</a> or <a href="http://harishv.me/blog">http://harishv.me/blog</a> will all now be enforced with HTTPS.</p>

<p>That’s all folks. Get your free SSL certificate with Cloudflare now!</p>

<p>P.S. If you’re wondering why is HTTPS that big of a deal, wait a few days for my next article on HTTPS - What’s the Big Deal?.</p>

	  ]]></description>
	</item>

	<item>
	  <title>Hosting with GitHub Pages</title>
	  <link>/blog//Hosting-with-GitHub-Pages</link>
	  <author>Harish V</author>
	  <pubDate>2017-04-14T00:00:00+08:00</pubDate>
	  <guid>/blog//Hosting-with-GitHub-Pages</guid>
	  <description><![CDATA[
	     <p>Did you know you can host websites with GitHub Pages? In fact, so far, all my websites have been hosted with GitHub Pages. See my <a href="http://harishv7.github.io/projects">Projects</a>. All the websites there under the domain <a href="http://harishv.me">harishv.me</a> are hosted under GitHub Pages. And of course, my homepage, and even this blog you are reading now are hosted on GitHub Pages. Let’s see why is it so awesome.</p>

<h3 id="the-great-stuff">The Great Stuff</h3>

<h4 id="its-free">1. It’s free!</h4>
<p>GitHub Pages offers free hosting of your websites/apps etc. That’s right, its totally free. (There’s a catch though, check the limitations below).</p>

<h4 id="connected-to-your-git-repository">2. Connected to your Git repository</h4>
<p>Version control is crucial for any project you do. GitHub Pages is connected with your GitHub repository, which means once any changes are pushed, your website is automatically rebuilt and deployed for you. The individual sub-pages that see - <a href="http://harishv.me/blog/">my blog</a>, <a href="http://harishv.me/projects/">my projects</a>, <a href="http://harishv.me/photography/">my photography page</a> are all individual GitHub repositories. The main page is a GitHub repository named <code class="highlighter-rouge">&lt;your-github-username&gt;.github.io</code> on the <code class="highlighter-rouge">master</code> branch. To deploy other repositories under your GitHub Pages domain, you simply push your changes to a <code class="highlighter-rouge">gh-pages</code> branch.</p>

<h4 id="custom-domain-names">3. Custom domain names</h4>
<p>By default GitHub Pages offers the domain <code class="highlighter-rouge">http://&lt;your-github-username&gt;.github.io</code>. This is good enough for many hobbyists to try deploying their local projects on the web. But if you want a custom domain, you can do that too. Simply register for a domain name on sites like <a href="http://namecheap.com/">Namecheap</a> or <a href="http://godaddy.com/">GoDaddy</a> and connect them to GitHub pages. My site domain <a href="http://harishv.me">harishv.me</a> is registered on Namecheap and connected to my GitHub repositories. If you want to see how I connected my Namecheap domain with GitHub Pages, check <a href="/blog//Connecting-Namecheap-Domain-with-GitHub">this</a> out.</p>

<h4 id="jekyll-blogging-support">4. Jekyll blogging support</h4>
<p>GitHub Pages supports Jekyll, which means you can create blogs and deploy them. Jekyll is a powerful <a href="https://en.wikipedia.org/wiki/Markdown">Markdown</a>-based blogging tool. All you need to do is run a few Jekyll commands after writing your posts and Jekyll builds static sites which you can easily push to GitHub. My <a href="http://harishv.me/blog/">blog</a> is built with Jekyll as well. It’s a great way for people who prefer pure code-style of blogging. Also, all your posts can be easily backed up as they are all in a text-based Markdown format.</p>

<h4 id="great-uptime">5. Great Uptime</h4>
<p>GitHub is almost always up with some rare cases of downtime. This means that it provides reliable service in ensuring your webpages are live 99% of the time. That’s one huge bonus for a free service. You can check on the GitHub system status <a href="https://status.github.com/">here</a>.</p>

<h3 id="limitations">Limitations</h3>

<p>This is a rather short section since there aren’t many disadvantages I can think of. There are rather limitations with GitHub Pages.</p>

<h4 id="only-hosts-static-sites">1. Only Hosts Static Sites</h4>
<p>While its true that GitHub Pages offers free hosting, it does not support full-fledged dynamic sites. Rather you can only host static sites which means they are in pure HTML, CSS and JavaScript. Essentially, there is no server-side support where you can for example do database-related operations etc. Nevertheless, this alone is powerful enough for some projects. All my pure front-end based projects are hosted with GitHub Pages. I have made many of those with the combination of HTML, CSS, JavaScript, libraries such as ReactJS and jQuery, and frameworks such as Bootstrap or Foundation.</p>

<h4 id="only-supports-github-repositories">2. Only supports GitHub repositories</h4>
<p>Of course, GitHub only supports repositories from itself. If you use another platform like <a href="https://bitbucket.org/">Atlassian BitBucket</a> for version control then you will not be able to utilise GitHub Pages. If you are using BitBucket, you are in luck since they too offer support for hosting static sites.  Check this <a href="https://confluence.atlassian.com/bitbucket/publishing-a-website-on-bitbucket-cloud-221449776.html">FAQ section</a> for more information.</p>

	  ]]></description>
	</item>

	<item>
	  <title>Connecting Namecheap Domain with GitHub Pages</title>
	  <link>/blog//Connecting-Namecheap-Domain-with-GitHub</link>
	  <author>Harish V</author>
	  <pubDate>2017-04-12T00:00:00+08:00</pubDate>
	  <guid>/blog//Connecting-Namecheap-Domain-with-GitHub</guid>
	  <description><![CDATA[
	     <p>A basic tutorial for those who are looking to connect their custom domain to GitHub Pages. This post assumes you will be getting your domain with Namecheap. But, it should mostly apply to any domain providers.</p>

<p>I first used Namecheap because they offered students free domains. Yup, if you are a student you can get a free Namecheap domain ending with `.me’ free for a year. Check their offer <a href="https://nc.me/">here</a>.</p>

<h4 id="register-on-namecheap">1. Register on Namecheap</h4>
<p>Simply go to the <a href="https://www.namecheap.com/">Namecheap homepage</a> and register for an account.</p>

<h4 id="select-a-cool-domain">2. Select a cool domain</h4>
<p>Try to get a <code class="highlighter-rouge">.com</code> domain. It is the most general and commonly used domain. But with a ton of websites floating online, you may not be able to find your ideal domain available under <code class="highlighter-rouge">.com</code>. If thats the case check out <code class="highlighter-rouge">.me</code> domains for a personal website (like mine), the trendy <code class="highlighter-rouge">.io</code> for a startup/business, <code class="highlighter-rouge">.net</code>. Namecheap offers a wide range of domains to choose from. Some of them are <code class="highlighter-rouge">.life</code>, <code class="highlighter-rouge">.co</code>, <code class="highlighter-rouge">.tech</code> etc.</p>

<p>Choose the domain carefully as you will be sticking with it for some considerable time.</p>

<h4 id="get-a-github-repository">3. Get a GitHub Repository</h4>
<p>If you have not yet created a repository, go to GitHub to create one. Name it <code class="highlighter-rouge">&lt;your-github-username&gt;.github.io</code> and ensure you have a master branch where you can push your HTML files. I assume you have your HTML, CSS, JavaScript files ready. Push them to this repository on the master branch.</p>

<p>Visit the website <code class="highlighter-rouge">&lt;your-github-username&gt;.github.io</code> should allow you to view the expected website.</p>

<h4 id="create-a-cname-record-in-your-repository">4. Create a CNAME record in your Repository</h4>
<p>Create a file titled CNAME with your domain name. That’s it. For example my CNAME file contains this:
<code class="highlighter-rouge">harishv.me</code>.</p>

<h4 id="go-to-namecheaps-dashboard">5. Go to Namecheap’s Dashboard</h4>
<p>Under the Advanced DNS section, add in the following records. The CNAME record’s value  follows the GitHub URL you made in step 3. The A records are used to point the domain name to the IP address of the hosting server, which in your case will be GitHub’s.</p>

<p><img src="assets/images/posts/namecheap_records.png" alt="Namecheap Records" /></p>

<p>That’s all folks. Give it a few minutes (or hours) and your site will be live at your newly registered domain.</p>

	  ]]></description>
	</item>

	<item>
	  <title>Top Email Clients for the New Mac</title>
	  <link>/blog//Top-Email-Clients-for-Mac</link>
	  <author>Harish V</author>
	  <pubDate>2017-02-19T00:00:00+08:00</pubDate>
	  <guid>/blog//Top-Email-Clients-for-Mac</guid>
	  <description><![CDATA[
	     <h2 id="apple-mail">Apple Mail</h2>

<p><img src="http://imgur.com/hm3hIAU.png" alt="Apple Mail" /></p>

<p><img src="https://support.apple.com/library/content/dam/edam/applecare/images/en_US/osx/yos_mail_conversations.png" alt="Apple Mail" /></p>

<p>Apple’s built in client, Mail, offers a neat interface for managing multiple email accounts at once. From experience, it integrates smoothly with all the popular service providers such as Google, Yahoo, Outlook and Office Enterprise accounts. It also offers markup capabilities to edit your PDF or image attachment right within the client. Spotlight on macOS also includes Mail attachments and emails into search. Mail comes installed by default on all new Macs.</p>

<h2 id="spark">Spark</h2>

<p><img src="https://sparkmailapp.com/img/new/index/all_devices.png" alt="Spark" /></p>

<p>Spark won “Best of 2016” award. Spark places itself as a client for users looking productivity. It has a Smart Inbox which allows you to focus on the most important emails by categorising new emails into  Personal, Notifications and Newsletters. Spark’s snooze feature helps you to get rid of emails that are not urgent. </p>

<p><img src="http://imgur.com/hZ07VF2.png" alt="Smart Search" /></p>

<p>My favourite feature of Spark is its smart search that support natural language. If you are looking for attachments from John, your colleague, simply typing “attachments from John” will bring the relevant results to you in an instant. Spark offers smart notifications, which helps you filter email notifications to only those of high priority. Signature support is also great in Spark as you just need to quickly swipe or choose between your frequently used signatures. </p>

<p>Spark offers an “Undo Send” feature which allows a delay of 5 seconds before sending the email. This may be useful for those who often send hurried emails as you can stop sending the email and continue edits. However, currently Spark does not allow for variable delay and it is fixed to 5 seconds.</p>

<p>Something that really stands out in Spark is its Quick Replies. You can quickly reply to any email with a preset of emotions such as Like, Thanks, Agree etc. And beyond all the hoard of features, Spark has a great UI that keeps you coming back to it. Spark comes free on both the Mac App Store for Macs and the iTunes Store for iOS devices. It’s definitely worth a try for all new users.</p>

<h2 id="airmail"> Airmail</h2>

<p><img src="http://imgur.com/kAhWBrC.png" alt="Airmail" /></p>

<p>I have been a loyal user of Airmail for about two years now. I made the switch from Apple’s Mail to Airmail primarily because of the Snooze function it offerred back then. At that time, Airmail seemed to be the best option as other alternatives (such as Spark) were not present. But a word of warning is that Airmail offers tons of preferences and settings which may not be for the average user. </p>

<p>Like Spark, Airmail has many of the features discussed. I personally like the “Undo Send” function which offers up to 120 seconds delay before sending an email which you clicked Send. It has already proved to be a crucial function in several scenarios.</p>

<p><img src="http://imgur.com/faZx1p1.png" alt="Markdown - Airmail" /></p>

<p>Airmail contains several themes which may appeal to different individuals. Also, Airmail offers crafting emails in Markdown, a popular language for blogging nowadays. It provides a immediate preview of the email by having a split screen view. With Markdown, you can easily create lists, and even embed your code blocks.</p>

<p>Airmail supports integrations with several productivity apps such as:</p>

<ul>
  <li>Calendar</li>
  <li>Reminders</li>
  <li>OmniFocus</li>
  <li>Wunderlist</li>
  <li>Todoist</li>
</ul>

<p>and many others!</p>

<p>While Airmail is not free, it comes at an affordable price of US$9.99.</p>

	  ]]></description>
	</item>

	<item>
	  <title>Top Todo App of 2016</title>
	  <link>/blog//Top-Todo-App-of-2016</link>
	  <author>Harish V</author>
	  <pubDate>2017-02-19T00:00:00+08:00</pubDate>
	  <guid>/blog//Top-Todo-App-of-2016</guid>
	  <description><![CDATA[
	     <p>There are a multitude of todo apps nowadays. Finding the right tool to keep your day organised is rather an individual choice - but there are definitely some apps which outshine others in terms of their features. The best apps offer advanced features such as notifications, reminders, lists and sublists and the list goes on. </p>

<h2 id="wunderlist">Wunderlist</h2>

<p><img src="http://imgur.com/vmpiDq5.png" alt="Wunderlist Main Screen" /></p>

<p>My vote for the best Todo application goes to Wunderlist. The name Wunderlist may be rather familiar to you considering it has been around since 2011. Though Wunderlist adopts a freemium model, I can safely say that the free version itself has plentiful of features that can satisfy any average user. </p>

<p>The best part of Wunderlist is its multi-platform support. The app is available on Windows, macOS, iOS, Android, Windows Phone, Kindle and Chromebook. Wunderlist also offers extensions on your favourite browsers: Chrome, Firefox and Safari. No matter where you are, you are always in sync. Add something on your Mac and it immediately shows up on your mobile phones.</p>

<p><img src="http://imgur.com/2OEZVgz.png" alt="Wunderlist ToDo" /></p>

<p>The second feature that makes Wunderlist the right tool for you is reminders. For every task that you add, you can specify both the due date and a reminder. This is my most used feature of Wunderlist as reminders ensure I am up to all my tasks even when I am not checking the app. Reminders are offered via the app as well as a personal email sent right to your inbox.</p>

<p>Todos added can also be specified to be recurring (daily, weekly, monthly, yearly or custom basis) and it is really simple to keep track of repeating tasks. Under each todo, Wunderlist also offers the support to add sub-tasks and notes. One thing the app does not offer is priority levels. You can also star important tasks which you can use to signify the priority. For more levels of priority, you can create individual priority lists and assign tasks to those. Alternatively, my recommendation is use Wunderlist tags. By appending “#tag_name” to tasks we can tag the task under a certain category. For priority levels for example, we can use <code class="highlighter-rouge">#high</code>, <code class="highlighter-rouge">#medium</code> and <code class="highlighter-rouge">#low</code>.</p>

<p>A huge plus of Wunderlist is its collaborative feature. I personally love using this feature whenever I am travelling with my friends or family. I simply create a shared list and all my friends or family members can easily edit the lists. They can also comment on the tasks I have added, making communication across the app really simple and easy.</p>

<p>The difference between the free version of Wunderlist and the Pro version is not stark, but it may make a difference for power users. Under the free version, we can add up to 5mb of files as attachments to tasks, assign up to 25 people, create up to 25 subtasks and choose from 20 backgrounds. The Pro version offers unlimited file size, assignments, subtasks and up to 30 backgrounds to choose from. Wunderlist Pro costs $4.99/month, but it seems that the basic or free version will easily satisfy the average user.</p>

<p>Check out the following link to Amazon for more information on Wunderlist, as well as a cool book which details Wunderlist for Writers!</p>

<iframe style="width:120px;height:240px;" marginwidth="0" marginheight="0" scrolling="no" frameborder="0" src="//ws-na.amazon-adsystem.com/widgets/q?ServiceVersion=20070822&amp;OneJS=1&amp;Operation=GetAdHtml&amp;MarketPlace=US&amp;source=ac&amp;ref=tf_til&amp;ad_type=product_link&amp;tracking_id=harishv7-20&amp;marketplace=amazon&amp;region=US&amp;placement=B01DICYKRU&amp;asins=B01DICYKRU&amp;linkId=955dd407043325294afff9cffcfc76bf&amp;show_border=false&amp;link_opens_in_new_window=false&amp;price_color=333333&amp;title_color=0066c0&amp;bg_color=ffffff">
</iframe>

<p>Wunderlist’s features and great looking user interface certainly makes it one of the most compelling todo apps today. Use it and let us know your comments below!</p>

	  ]]></description>
	</item>

	<item>
	  <title>What is Markdown?</title>
	  <link>/blog//What-is-Markdown</link>
	  <author>Harish V</author>
	  <pubDate>2017-02-18T00:00:00+08:00</pubDate>
	  <guid>/blog//What-is-Markdown</guid>
	  <description><![CDATA[
	     <p>Markdown is a markup language that can be easily converted to HTML or other formats. The best part of Markdown is that you can write it in plaintext format, yet format it using certain special characters such as hyphens (<code class="highlighter-rouge">-</code>), quotes etc. Even this post was rendered with Markdown. Let’s see how we can craft posts with Markdown.</p>

<h2 id="headings">Headings</h2>

<p>Similar to HTML, Markdown supports six levels of headings, from H1 to H6. To achieve different headings, we simply use the <code class="highlighter-rouge">#</code> to denote the level. For example:</p>

<p><code class="highlighter-rouge"># Hello</code> yields a H1 header while <code class="highlighter-rouge">## Hello</code> yields a H2 header. Here’s a demo:</p>

<h1 id="h1-header">H1 header</h1>

<h2 id="h2-header">H2 header</h2>

<h3 id="h3-header">H3 header</h3>

<h4 id="h4-header">H4 header</h4>

<h5 id="h5-header">H5 header</h5>

<h6 id="h6-header">H6 header</h6>

<h2 id="bold-italics-underline-and-strikethrough">Bold, Italics, Underline and Strikethrough</h2>

<p>To give sufficient emphasis we can use the following syntax:</p>

<p>```markdown
Text can be made bold by using a <strong>double asterisks</strong> or <strong>double underscores</strong> at both the start and end of the text segment.</p>

<p>Text can be made italics by using a single asterisk or single underscore at both the start and end of the text segment.</p>

<p>To combine both bold and italics, we can use both the above notations like <em><strong>this</strong></em>.</p>

<p>To make a strikethrough, we can use two tildes at the start and end of the text segment ~~like this~~.
```</p>

<p>Text can be made bold by using a <strong>double asterisks</strong> or <strong>double underscores</strong> at both the start and end of the text segment.</p>

<p>Text can be made italics by using a single asterisk or single underscore at both the start and end of the text segment.</p>

<p>To combine both bold and italics, we can use both the above notations like <em><strong>this</strong></em>.</p>

<p>To make a strikethrough, we can use two tildes at the start and end of the text segment ~~like this~~.</p>

<h2 id="making-lists">Making Lists</h2>

<p>Lists are one of the most needed features for anyone writing anything! Markdown offers a nifty feature for making lists that is super easy to write.</p>

<h3 id="ordered-numbered-lists">Ordered (Numbered) Lists</h3>

<p>To make numbered lists, we simply start with <code class="highlighter-rouge">1. </code> and markdown interprets whatever comes after as the first point of the list. You can create nested lists with three spaces followed by a number.</p>

<p><code class="highlighter-rouge">markdown
1. Hello World
2. This is a numbered list.
   3. This is a nested numbered list.
</code>
The above gives us the following result:</p>

<ol>
  <li>Hello World</li>
  <li>This is a numbered list.
    <ol>
      <li>This is a nested numbered list.</li>
    </ol>
  </li>
</ol>

<h3 id="unordered-lists">Unordered Lists</h3>

<p>To make unordered lists, we can use asterisks (*), minuses (-), pluses (+).</p>

<p><code class="highlighter-rouge">markdown
* Unordered point 1
+ Unordered point 2
- Unordered point 3
</code></p>

<p>The above will now translate to:</p>

<ul>
  <li>Unordered point 1</li>
  <li>Unordered point 2</li>
  <li>Unordered point 3</li>
</ul>

<h3 id="combining-ordered-and-unordered-lists">Combining Ordered and Unordered Lists</h3>

<p>To combine and nest ordered and unordered lists, we just need to add trailing spaces before the next point followed by a number/asterisk/minus/plus.</p>

<p><code class="highlighter-rouge">markdown
1. Ordered point 1
2. Ordered point 2
   * Unordered point nested under point 2
3. Ordered point 3
   1. Ordered point 1 under point 3
</code>
Result:</p>

<ol>
  <li>Ordered point 1</li>
  <li>Ordered point 2
    <ul>
      <li>Unordered point nested under point 2</li>
    </ul>
  </li>
  <li>Ordered point 3
    <ol>
      <li>Ordered point 1 under point 3</li>
    </ol>
  </li>
</ol>

<h2 id="adding-links">Adding Links</h2>

<p>Hyperlinks are one of the most commonly used features in any document, blog etc. Adding links in Markdown is really simple too!</p>

<p>To add a hyperlink on a text, we use both square brackets <code class="highlighter-rouge">[]</code> and round brackets <code class="highlighter-rouge">()</code>.</p>

<p>First we put the text we want to hyperlink into the square brackets, in this example, Google: <code class="highlighter-rouge">[Google]</code>. Next, we hyperlink by adding the actual web address in between round brackets right after the square brackets, like this:</p>

<p><code class="highlighter-rouge">markdown
[Google](http://www.google.com)
</code></p>

<p>Rendering the markdown, we get this:</p>

<p><a href="http://google.com">Google</a></p>

<h2 id="adding-images">Adding Images</h2>

<p>Adding images is very similar to adding links. All we need to do is to add an exclamation mark in front of the square brackets. The alt text for the image goes into the square brackets and web address into the round brackets. Suppose we want to display the Google logo, we do this:</p>

<p><code class="highlighter-rouge">markdown
![Google Logo](https://upload.wikimedia.org/wikipedia/commons/thumb/2/2f/Google_2015_logo.svg/2000px-Google_2015_logo.svg.png)
</code></p>

<p>And this renders as:</p>

<p><img src="https://upload.wikimedia.org/wikipedia/commons/thumb/2/2f/Google_2015_logo.svg/2000px-Google_2015_logo.svg.png" alt="Google Logo" /></p>

<h2 id="blockquotes">Blockquotes</h2>

<p>Blockquotes are handy to specify sections which have been to quoted from another source. They are commonly used in emails where you can highlight the point you are addressing with regards to a previous email. To add a block quote, you use the <code class="highlighter-rouge">&gt;</code> sign.</p>

<p><code class="highlighter-rouge">markdown
&gt; This is a blockquote.
&gt; This is the second line of the blockquote.
</code></p>

<blockquote>
  <p>This is a blockquote.
This is the second line of the blockquote.</p>
</blockquote>

<h2 id="adding-code">Adding Code</h2>

<p>Markdown supports adding code and syntax-highlighting. This is a joy for any programmer or developer. I am personally a heavy user of this feature to make my notes/articles. To add a code block, we wrap the code with three backticks: “```” .</p>

<p>```</p>

<p>This is a general code block as there is no language specified.</p>

<p>```</p>

<p>We can add code blocks by specifying the language as well. We do this by adding the language name right after the first “```”. For example, lets add a Python code block.</p>

<figure class="highlight"><pre><code class="language-markdown" data-lang="markdown"><span class="sb">```</span>python
def print_hello_world():
    print("Hello World!");
    
print_hello_world();
<span class="sb">```</span></code></pre></figure>

<p>Writing the above renders into:</p>

<figure class="highlight"><pre><code class="language-python" data-lang="python"><span class="k">def</span> <span class="nf">print_hello_world</span><span class="p">():</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Hello World!"</span><span class="p">);</span>
    
<span class="n">print_hello_world</span><span class="p">();</span></code></pre></figure>

<p>Similarly, Markdown supports an astonishing variety of languages!</p>

<p>Sometimes, you just want to highlight a specific word like <code class="highlighter-rouge">this</code>. That’s called inline code. To add inline code, we just use one backtick.</p>

<figure class="highlight"><pre><code class="language-markdown" data-lang="markdown"><span class="sb">`inline code`</span></code></pre></figure>

<p>gives us <code class="highlighter-rouge">inline code</code>.</p>

<h2 id="adding-tables">Adding Tables</h2>

<p>Yup, there is support for adding tables too! Now you can easily add tables with markdown to all your emails instead of creating them elsewhere and painstakingly copying them over to ensure in-tact formatting.</p>

<p>We use fences to make tables in markdown. A typical markdown table looks like this:</p>

<p><code class="highlighter-rouge">markdown
| Fruits    | Cost   | Quantity  | Total |Supplier   |
| :-------- |-------:| ---------:|------:|:---------:|
| Apples    | $2     |   160     |$320   |XYZ Company|
| Oranges   | $3     |   120     |$360   |ABC Company|
| Pears     | $4     |   100     |$400   |123 Company|
</code></p>

<p>Colons help us align the content within the columns. You can also add emphasis (bold, italics, strikethrough) in the tables.</p>

<table>
  <thead>
    <tr>
      <th style="text-align: left">Fruits</th>
      <th style="text-align: right">Cost</th>
      <th style="text-align: right">Quantity</th>
      <th style="text-align: right">Total</th>
      <th style="text-align: center">Supplier</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: left">Apples</td>
      <td style="text-align: right">$2</td>
      <td style="text-align: right">160</td>
      <td style="text-align: right">$320</td>
      <td style="text-align: center">XYZ Company</td>
    </tr>
    <tr>
      <td style="text-align: left">Oranges</td>
      <td style="text-align: right">$3</td>
      <td style="text-align: right">120</td>
      <td style="text-align: right">$360</td>
      <td style="text-align: center">ABC Company</td>
    </tr>
    <tr>
      <td style="text-align: left">Pears</td>
      <td style="text-align: right">$4</td>
      <td style="text-align: right">100</td>
      <td style="text-align: right">$400</td>
      <td style="text-align: center">123 Company</td>
    </tr>
  </tbody>
</table>

<p>As you can it is a really neat way to make tables! Placing the colon on either sides of the dividing line indicates how the content for the column will be aligned. Colon on left helps left-align (see column <code class="highlighter-rouge">Fruits</code>). Colon on the right helps right-align (see columns <code class="highlighter-rouge">Cost</code>, <code class="highlighter-rouge">Quantity</code> and <code class="highlighter-rouge">Total</code>). Colons on both sides centers the column’s content (see column <code class="highlighter-rouge">Supplier</code>).</p>

<h2 id="horizontal-line-breaks">Horizontal Line Breaks</h2>

<p>To have horziontal lines as dividers, we can use three asterisks (*), hyphens (-) or underscores (_).</p>

<p>For example:</p>

<figure class="highlight"><pre><code class="language-markdown" data-lang="markdown">Horizontal line 1:
<span class="p">
***
</span>
Horizontal line 2:
<span class="p">
---
</span>
Horizontal line 3:
<span class="ge">__</span>_</code></pre></figure>

<p>renders as:</p>

<p>Horizontal line 1:</p>

<hr />

<p>Horizontal line 2:</p>

<hr />

<p>Horizontal line 3:
___</p>

<p>And that’s it folks! Markdown is a handy and simply language to learn that can help to save loads of time for plaintext lovers. Already planning on which Markdown editor to use? A new article is coming right on that. Meanwhile, give Markdown a try and share your comments below 👇🏼!</p>

	  ]]></description>
	</item>

	<item>
	  <title>Asynchronous Programming in Node.JS</title>
	  <link>/blog//Asynchronous-Programming</link>
	  <author>Harish V</author>
	  <pubDate>2016-07-30T00:00:00+08:00</pubDate>
	  <guid>/blog//Asynchronous-Programming</guid>
	  <description><![CDATA[
	     <p>Let’s imagine a restaurant reservation application where 10 people are trying to book at the same time. It will be really inconvenient if the 10th person has wait for the 9 others to finish their bookings first. The database calls can take considerable amount of time. With asynchronous programming, we can run multiple requests at the same time.</p>

<p>Instead of running things one by one, we can use the concepts of callbacks and promises to have our code to do something while something else is happening. For example, when one user has submitted his booking, while this request is being processed on the backend, the web application can service another request from the next user.</p>

<p>A simple demo:</p>

<p>Let’s consider this program (app.js):</p>

<figure class="highlight"><pre><code class="language-javascript" data-lang="javascript"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">"ONE"</span><span class="p">);</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">"TWO"</span><span class="p">);</span></code></pre></figure>

<p>Running this with <code class="highlighter-rouge">node app.js</code> will print this:</p>

<figure class="highlight"><pre><code class="language-javascript" data-lang="javascript"><span class="nx">ONE</span>
<span class="nx">TWO</span></code></pre></figure>

<p>Let’s replace this code in <code class="highlighter-rouge">app.js</code> with:</p>

<figure class="highlight"><pre><code class="language-javascript" data-lang="javascript"><span class="nx">setTimeout</span><span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
	<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">"ONE"</span><span class="p">);</span>
<span class="p">},</span> <span class="mi">1000</span><span class="p">);</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">"TWO"</span><span class="p">);</span></code></pre></figure>

<p>Running this now prints:</p>

<figure class="highlight"><pre><code class="language-javascript" data-lang="javascript"><span class="nx">TWO</span>
<span class="nx">ONE</span></code></pre></figure>

<p>This demonstrates asynchronous programming with callbacks. The function inside setTimeout is the callback function after the 1000 milliseconds have passed. During this 1000 milliseconds, the program continues on to execute the next instruction which is to log “TWO” to the console.</p>

	  ]]></description>
	</item>

	<item>
	  <title>ReactJS Workshop</title>
	  <link>/blog//ReactJS-Workshop</link>
	  <author>Harish V</author>
	  <pubDate>2016-06-22T00:00:00+08:00</pubDate>
	  <guid>/blog//ReactJS-Workshop</guid>
	  <description><![CDATA[
	     <p>Recently, I had the pleasure of conducting the 3rd Hackerschool workshop in the series on React JS. React is an amazing UI library (commonly misunderstood as a framework). Unlike a framework that typically deals with all the 3 main areas of Model, View and Controller layers (see my <a href="http://harishv.me/tech/general/techstuff/2015/10/02/MVC-Design-Pattern.html">MVC post</a>, React is a Javascript library for building user interfaces.</p>

<p>Initially I thought React is just one of another Javascript framework or library that pops up and fades away. But no, React is just amazing and it’s popularity has been growing ever since it’s release.</p>

<p>To know why, you can check out one of the many React tutorials out there. In the workshop, I basically covered a simple todo app which can be built with ReactJS.</p>

<p>The workshop materials are available on <a href="https://github.com/harishv7/reactjs">Github</a> and <a href="http://harishv7.github.io/reactjs/#/">here</a>.</p>

<p>I’ll try and write the tutorial out as a blog post sometime. <br /></p>

<p>Till next time, <br />
Cheers, <br />
Harish V</p>

	  ]]></description>
	</item>

	<item>
	  <title>Data Science Student Challenge 2016 Experience</title>
	  <link>/blog//Data-Science-Student-Challenge-Experience</link>
	  <author>Harish V</author>
	  <pubDate>2016-03-29T00:00:00+08:00</pubDate>
	  <guid>/blog//Data-Science-Student-Challenge-Experience</guid>
	  <description><![CDATA[
	     <h2 id="about-the-challenge--our-product">About the Challenge &amp; Our Product</h2>

<p>Recently, I had the opportunity to participate in the Data Science Student Challenge which was co-organised and sponsored by Microsoft.</p>

<p>I took part in this event together with my friends Alvian, Chris &amp; Ida. We worked tirelessly over just 24 hours to build a full-fledged working application which integrates the concepts of machine learning and data science. And the result of our effort was “Prosper”.</p>

<p>The following extract is from our Github page.</p>

<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="no">Prosper</span> <span class="n">stands</span> <span class="k">for</span> <span class="no">Property</span> <span class="no">Resale</span> <span class="no">Price</span> <span class="no">Forecaster</span><span class="o">.</span>

<span class="no">It</span> <span class="n">is</span> <span class="n">essentially</span> <span class="n">an</span> <span class="n">application</span> <span class="n">that</span> <span class="n">can</span> <span class="n">predict</span> <span class="n">the</span> <span class="n">future</span> <span class="n">resale</span> <span class="n">value</span> <span class="n">of</span> <span class="n">your</span> <span class="n">flat</span> <span class="p">(</span><span class="k">in</span> <span class="no">Singapore</span><span class="p">)</span><span class="o">!</span> <span class="no">Sounds</span> <span class="n">exciting?</span>

<span class="no">We</span> <span class="n">have</span> <span class="n">combined</span> <span class="n">the</span> <span class="n">power</span> <span class="n">of</span> <span class="no">Microsoft</span> <span class="no">Azure</span><span class="err">'</span><span class="n">s</span> <span class="no">Machine</span> <span class="no">Learning</span> <span class="n">capabilities</span> <span class="n">together</span> <span class="n">with</span> <span class="n">the</span> <span class="n">resale</span> <span class="n">flat</span> <span class="n">data</span> <span class="n">from</span> <span class="n">http</span><span class="ss">:/</span><span class="o">/</span><span class="n">data</span><span class="p">.</span><span class="nf">gov</span><span class="p">.</span><span class="nf">sg</span> <span class="n">to</span> <span class="n">utilise</span> <span class="n">over</span> <span class="mi">15</span> <span class="n">years</span> <span class="n">of</span> <span class="n">data</span> <span class="n">and</span> <span class="mi">480</span><span class="p">,</span><span class="mo">000</span> <span class="n">data</span> <span class="n">points</span> <span class="k">for</span> <span class="n">an</span> <span class="n">astonishing</span> <span class="mi">95</span><span class="o">%</span> <span class="p">(</span><span class="n">error</span> <span class="n">margin</span> <span class="n">of</span> <span class="o">+-</span><span class="mi">5</span><span class="o">%</span><span class="p">)</span> <span class="n">accuracy</span> <span class="k">in</span> <span class="n">prediction</span> <span class="n">of</span> <span class="n">the</span> <span class="n">price</span><span class="o">.</span>

<span class="no">As</span> <span class="n">a</span> <span class="n">pro</span> <span class="n">analytics</span> <span class="n">feature</span><span class="p">,</span> <span class="no">Prosper</span> <span class="n">also</span> <span class="n">provides</span> <span class="n">a</span> <span class="n">suggestion</span> <span class="n">on</span> <span class="k">when</span> <span class="n">you</span> <span class="n">should</span> <span class="n">be</span> <span class="n">selling</span> <span class="n">your</span> <span class="n">flat</span> <span class="n">based</span> <span class="n">on</span> <span class="n">your</span> <span class="n">expected</span> <span class="n">annual</span> <span class="n">growth</span> <span class="n">rate</span> <span class="n">of</span> <span class="n">the</span> <span class="n">flat</span> <span class="n">price</span><span class="o">.</span> <span class="no">Hence</span><span class="p">,</span> <span class="n">the</span> <span class="n">application</span> <span class="n">tries</span> <span class="n">to</span> <span class="n">maximise</span> <span class="n">your</span> <span class="n">profit</span> <span class="n">given</span> <span class="n">the</span> <span class="n">expected</span> <span class="n">growth</span> <span class="n">price</span> <span class="n">per</span> <span class="n">annum</span><span class="o">.</span>

<span class="no">This</span> <span class="n">application</span> <span class="n">runs</span> <span class="n">using</span> <span class="no">Java</span> <span class="n">and</span> <span class="n">you</span> <span class="n">can</span> <span class="n">download</span> <span class="n">it</span> <span class="n">from</span> <span class="n">the</span> <span class="no">Releases</span> <span class="n">page</span><span class="o">.</span>

<span class="no">Prosper</span> <span class="n">was</span> <span class="n">developed</span> <span class="k">in</span> <span class="mi">24</span> <span class="n">hours</span> <span class="k">in</span> <span class="n">the</span> <span class="no">National</span> <span class="no">University</span> <span class="n">of</span> <span class="no">Singapore</span> <span class="p">(</span><span class="no">NUS</span><span class="p">)</span> <span class="no">Data</span> <span class="no">Science</span> <span class="no">Student</span> <span class="no">Challenge</span> <span class="n">supported</span> <span class="n">by</span> <span class="no">Mircosoft</span><span class="o">.</span>

<span class="no">Prosper</span> <span class="n">managed</span> <span class="n">to</span> <span class="n">secure</span> <span class="n">the</span> <span class="mi">5</span><span class="n">th</span> <span class="n">place</span> <span class="n">among</span> <span class="n">dozens</span> <span class="n">of</span> <span class="n">teams</span> <span class="n">at</span> <span class="no">NUS</span> <span class="no">Data</span> <span class="no">Science</span> <span class="no">Student</span> <span class="no">Challenge</span> <span class="mi">2016</span><span class="o">.</span></code></pre></figure>

<p>Below are some screenshots of the application. You can download and give Prosper a try <a href="https://github.com/harishv7/Prosper/releases">here</a>.</p>

<h2 id="experience">Experience</h2>

<p>While it was extremely tiring, it was really a fulfilling experience. In that intense 24 hours, I actually learnt so much skills. It also proved that to learn something new, we only needed the determination and the dedication to pursue it.</p>

<p>Alvian has always been interested in the topics of data science and machine learning. Naturally, he was able to lead our discussion and ideas prior to the building of the actual application. I was in charge of developing the desktop client to communicate with the APIs provided by Microsoft Azure.</p>

<p>Initially, I tried using simple AJAX calls through a website. However, it did not work due to some error relating to the blockage of “Cross-Origin Requests”. After about 2 hours and going through multiple StackOverflow questions, we decided to change track. I never thought my experience in a previous module, CS2103 Software Engineering, will help me. I used the good old legacy language Java as it was stable and what everyone in my team knew best. Our technology stack was essentially JavaFX to design the layout the GUI and pure Java for the backend logic.</p>

<p>Both Ida and Chris helped me and Alvian to get the building of the application done. Meanwhile, Alvian started training the model for our app with the data provided by <a href="https://data.gov.sg/developer">https://data.gov.sg/developer</a>.</p>

<p>After getting through the initial round, my team was selected for the finals where we had to present to a panel of judges. It was really a tough experience. Imagine 24 hours++ without sleep and still needing the energy to be able to present lively to the audience in front of you.</p>

<p>While we did not obtain the top 3 prizes, I was definitely overjoyed to have my team in the 5th place considering that we were all just sophomores in NUS without much experience in these field. I definitely look forward to participating in the next challenge.</p>

<h2 id="screenshots">Screenshots</h2>

<p><img src="http://i.imgur.com/UyzzCLM.png" alt="Image1" />
<img src="http://i.imgur.com/eWqAGKg.png" alt="Image2" /></p>

<p>Cheers, <br />
Harish V</p>

	  ]]></description>
	</item>


</channel>
</rss>
